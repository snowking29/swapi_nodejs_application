# serverless.yml
  
service: fn-starwars-application

custom:
  tableName: 'vehicles-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["VehiclesDynamoDBTable", "Arn" ] }
  environment:
    VEHICLES_TABLE: ${self:custom.tableName}
      
        
functions:
  postVehicles:
    handler: index.handler
    events:
      - http: 'POST /vehicles'
  getVehicles:
    handler: index.handler
    events:
      - http: 'GET /vehicles'
      - http: 'GET /vehicles/{proxy+}'

resources:
  Resources:
    VehiclesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: vehicleId
            AttributeType: S
        KeySchema:
          -
            AttributeName: vehicleId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
